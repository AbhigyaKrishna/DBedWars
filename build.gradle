plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
    id 'net.minecrell.plugin-yml.bukkit' version '0.5.1'
    id 'de.undercouch.download' version '5.1.0'
}

allprojects {
    group 'DBedwars'
    version '1.0'
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'


    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://repo.zibble.org/nexus/repository/maven-public/'
        }
        maven {
            url 'https://repo.zibble.org/nexus/repository/maven-snapshots/'
        }
        maven {
            name = 'spigot-snapshots'
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/groups/public/'
        }
        maven {
            name = 'jitpack'
            url = "https://jitpack.io"
        }
    }

    dependencies {
        implementation 'org.zibble:if-api:1.1-SNAPSHOT'
        implementation 'net.kyori:adventure-api:4.11.0'
        implementation 'net.kyori:adventure-text-minimessage:4.11.0'
        implementation 'net.kyori:adventure-text-serializer-gson:4.11.0'
        implementation 'net.kyori:adventure-text-serializer-gson-legacy-impl:4.11.0'
        implementation 'net.kyori:adventure-text-serializer-legacy:4.11.0'
        implementation 'net.kyori:adventure-text-serializer-plain:4.11.0'
        implementation 'net.kyori:adventure-platform-bukkit:4.1.1'
        implementation 'com.github.cryptomorin:XSeries:8.8.0'
        implementation 'xyz.xenondevs:particle:1.7.1'
        compileOnly 'com.google.guava:guava:31.1-jre'
        compileOnly 'com.github.retrooper.packetevents:api:2.0-SNAPSHOT'
    }

    configurations.implementation {
        exclude group: 'org.apache', module: 'commons-lang'
        exclude group: 'org.apache', module: 'commons-lang3'
        exclude group: 'commons-lang', module: 'commons-lang'
    }

    assemble {
        dependsOn shadowJar
    }

    shadowJar {
        relocate 'org.reflections', 'org.zibble.dbedwars.libraries.reflections'
        relocate 'org.bstats', 'org.zibble.dbedwars.libraries.bstats'
        relocate 'com.github.retrooper.packetevents', 'org.zibble.dbedwars.libraries.packetevents.api'
        relocate 'io.github.retrooper.packetevents', 'org.zibble.dbedwars.libraries.packetevents.spigot'

        minimize()
    }
    def targetJavaVersion = 8

    tasks.withType(JavaCompile).configureEach {
        options.encoding 'UTF-8'
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release = targetJavaVersion
        }
    }

    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

}

compileJava {
    targetCompatibility = 8
    sourceCompatibility = 8

    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

repositories {
    maven {
        name = 'CodeMC'
        url = 'https://repo.codemc.org/repository/maven-public/'
    }
    maven {
        name = 'aikar'
        url = "https://repo.aikar.co/content/groups/aikar/"
    }
    maven {
        name = 'spigot-public'
        url = "https://hub.spigotmc.org/nexus/content/groups/public/"
    }
    maven {
        name = 'glaremasters'
        url = "https://repo.glaremasters.me/repository/concuncan/"
    }
}

dependencies {
    implementation project(':api')
    implementation project(':nms-v1_8_R3')
    implementation project(':hooks:autonicker-hook')
    implementation project(':hooks:citizens-hook')
    implementation project(':hooks:cmi-hook')
    implementation project(':hooks:eazynick-hook')
    implementation project(':hooks:featherboard-hook')
    implementation project(':hooks:nametagedit-hook')
    implementation project(':hooks:nickapi-hook')
    implementation project(':hooks:nicknamer-hook')
    implementation project(':hooks:placeholderapi-hook')
    implementation project(':hooks:pvplevels-hook')
    implementation project(':hooks:quickboard-hook')
    implementation project(':hooks:skinrestorer-hook')
    implementation project(':hooks:slimeworldmanager-hook')
    implementation project(':hooks:tab-hook')
    implementation project(':hooks:vanish-hook')
    implementation project(':hooks:vault-hook')
    implementation project(':hooks:viphide-hook')
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'com.github.retrooper.packetevents:spigot:2.0-SNAPSHOT'
    implementation 'org.bstats:bstats-bukkit:2.2.1'
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'org.jooq:jooq:3.14.15'
    compileOnly 'com.zaxxer:HikariCP:4.0.3'
    compileOnly 'org.mongodb:mongo-java-driver:3.12.10'
    compileOnly 'com.onarandombox.multiversecore:Multiverse-Core:4.3.1-SNAPSHOT'
    compileOnly 'com.grinderwolf:slimeworldmanager-api:2.2.1'
}

tasks.register('verifyFileDependency').configure {
    File lib = file('lib')
    if (!lib.exists()) {
        lib.mkdirs()
    }

    Map<String, String> files = new HashMap<>()
    files.put('AutoNicker.jar', 'https://download943.mediafire.com/sp42fs7mbgfg/6z164f46orsizl4/AutoNicker.jar')
    files.put('CMI-Api.jar', 'https://github.com/Zrips/CMI-API/releases/download/8.7.8.2/CMIAPI8.7.8.2.jar')
    files.put('EazyNick.jar', 'https://github.com/JustixDevelopment/EazyNick/releases/download/v3.14.0/EazyNick.jar')
    files.put('FeatherBoard.jar', 'https://download1074.mediafire.com/e83lsa39yevg/debeey18oxhxoaz/FeatherBoard.jar')
    files.put('PvPLevels.jar', 'https://download1593.mediafire.com/d7vgmk9po7bg/ytz3cj5ujwp0raj/PvPLevels.jar')
    files.put('QuickBoard.jar', 'https://download1593.mediafire.com/chxex5e58aqg/6wd8gjcmrfob0au/QuickBoard.jar')
    files.put('TAB.jar', 'https://download1321.mediafire.com/ssp7spdotrzg/3rumrpkhe8zfhk1/TAB+v3.1.2.jar')
    files.put('VipHide.jar', 'https://www.mine-home.net/download/VIPHide')

    for (f in files.entrySet()) {
        download.run {
            src f.getValue()
            dest file('lib/' + f.getKey())
            overwrite false
        }
    }
}

assemble {
    dependsOn verifyFileDependency
    dependsOn subprojects.assemble
}

bukkit {
    main = "org.zibble.dbedwars.Dbedwars"
    name = "DBedWars"
    version = "1.0"
    apiVersion = "1.13"

    author = "Abhigya"
    softDepend = Arrays.asList(
            "AutoNicker",
            "BetterNick",
            "Citizens",
            "CMI",
            "EazyNick",
            "FeatherBoard",
            "NametagEdit",
            "NickAPI",
            "NickNamer",
            "PlaceholderAPI",
            "PremiumVanish",
            "PvPLevels",
            "QuickBoard",
            "SkinRestorer",
            "SlimeWorldManager",
            "SuperVanish",
            "Tab",
            "Vanish",
            "Vault",
            "VIPHide"
    )
}